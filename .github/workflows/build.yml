name: build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*.**
  merge_group:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    timeout-minutes: 15
    runs-on: [self-hosted, Linux, ARM64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Determine Version
        run: |
          # determine version from tag
          export VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          if [[ $VERSION != v* ]]
          then
            export VERSION="${VERSION}-SNAPSHOT"
            echo "Building as ${VERSION}"
          else
            # make version more Java-friendly by dropping the 'v'
            export VERSION=${VERSION:1:${#VERSION}}
            echo "Building as ${VERSION}"
          fi
          # store version in GitHub environment file
          echo "version=$VERSION" >> $GITHUB_ENV
      - name: Install JEP
        run: |
          python3 -m venv ~/.virtualenvs/cpg
          source ~/.virtualenvs/cpg/bin/activate
          pip3 install jep==$(grep "black.ninia:jep" gradle/libs.versions.toml | grep -o -E "[0-9]\d*(\.[0-9]\d*)*")
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build ${{ env.version }}
        run: |
          ./gradlew --parallel -Pversion=$VERSION spotlessCheck -x spotlessApply build -x distZip -x distTar
        id: build
        env:
          VERSION: ${{ env.version }}
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'beta') && !contains(github.ref, 'alpha')
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.version }}
          draft: false
          prerelease: false
