name: Disk Encryption - Bring your own Key
description: This describes a scenario where a user brings his own key to encrypt volumes.
components:
  - cinder
  - castellan
  - barbican
assumptions:
  - Third-party library code is correctly implemented
objectives:
  - name: State-of-the-Art Encryption Algorithm
    description: The block device encryption algorithm must be state of the art, e.g., refer to a TR.
    statements:
      - Given a block device encryption E, if an encryption algorithm A is employed, then A must be a state-of-the-art cryptographic algorithm (e.g., BSI TR-02102-1)
      - A must support a minimum key length L with L >= 256
    components:
      - cinder
  - name: Key must be input to disk encryption
    description: The selected customer key must be the actual input to the block encryption
    statements:
      - Given a customer-managed key K stored in Barbican, it must not be leaked via printing, logging, file writing or command execution input.
      - Given a customer-managed key K used for disk encryption, K must only be accessible via the Barbican API endpoint.
      - Given a device encryption operation O, the key K used in O must be deleted from memory after the operation is completed.
    components:
      - cinder
      - castellan
      - barbican
  - name: Transport Encryption of Key
    description: The key must be protected when in transit.
    statements:
      - Given a client call C that retrieves a key K from the Barbican API, the transmission of K must utilize a secure, state-of-the-art, transport protocol (e.g., specified in BSI TR-02102-1).
    restrictions:
      - Only client calls from Cinder to Barbican are in scope.
    components:
      - barbican
      - castellan
      - cinder
  - name: Key accessible only by valid user
    description: The key must only be accessible by a valid user and through the REST API of barbican.
    statements:
      - Access to Barbican keys must be restricted to authenticated users, i.e., each Barbican REST API that provides access to K must be connected to an Authentication concept.
      - Access to Barbican keys must be restricted to authenticated users through authorization, i.e., each operation on K must be connected to an Authorization concept.
      - Given a list of user permissions P (defined in permission configs) and an authorization check A, a check is performed on P and used as input to A.
    restrictions:
      - No authorization check are in scope in the initial version of the use case.
    components:
      - barbican